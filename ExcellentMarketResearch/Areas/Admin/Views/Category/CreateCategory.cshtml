@model ExcellentMarketResearch.Areas.Admin.Models.ViewModel.CategoryVM
@{
    ViewBag.Title = "CreateCategory";
}
@using (Html.BeginForm("CreateCategory", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true) 
    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            $("#ParentCategory").change(function () {
                var v = $(this).val();
                $.ajax({
                    type: "post",
                    url: '@Url.Action("GetChild", "Category")',
                    data: "{ 'id':" + v + "}",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        debugger;
                        $("#ChildCategory").empty();//just cleans all html from the control, element
                        $("#ChildCategory").append('<option>-Select-</option>');
                        //foreach loop
                        $.each(data, function (i, ParentCategory) {
                            $("#ChildCategory").append('<option value="' + ParentCategory.Value + '">' + ParentCategory.Text + '</option>', "-Select-")
                        })

                    },
                    error: function (res) {
                        alert(res.responseText);
                    }
                });
            });
            @* $("#ChildCategory").change(function () {
            var v = $(this).val();

            $.ajax({
                type: "post",
                url: '@Url.Action("GetChildofchild", "Report")',
                data: "{ 'id':" + v + "}",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#ChildofChild").empty();//just cleans all html from the control, element
                    $("#ChildofChild").append('<option>-Select-</option>');
                    //foreach loop
                    $.each(data, function (i, Childcategory) {
                        $("#ChildofChild").append('<option value="' + Childcategory.Value + '">' + Childcategory.Text + '</option>', "-Select-")
                    })
                },
                error: function (res) {
                    alert(res.responseText);
                }
            })
        });*@
        });
    </script>
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Category Name</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.CategoryName, new { @class = "form-control" })
                <p class="help-block" style="color: red">@Html.ValidationMessageFor(model => model.CategoryName)@ViewBag.DuplicateTitle</p>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Category URL</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.CategoryURL, new { @class = "form-control" })
                <p class="help-block">@Html.ValidationMessageFor(model => model.CategoryURL)@ViewBag.DuplicateURL</p>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Meta Title </label>
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.MetaTitle, new { @class = "form-control" })
                <p class="help-block">@Html.ValidationMessageFor(model => model.MetaTitle)</p>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Keywords </label>
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.Keywords, new { @class = "form-control" })
                <p class="help-block">@Html.ValidationMessageFor(model => model.Keywords)</p>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Short Description </label>
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.ShortDescription, new { @class = "form-control" })
                <p class="help-block">@Html.ValidationMessageFor(model => model.ShortDescription)</p>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Long Description </label>
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.LongDescription, new { @class = "form-control" })
                <p class="help-block">@Html.ValidationMessageFor(model => model.LongDescription)</p>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Meta Description </label>
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.MetaDescription, new { @class = "form-control" })
                <p class="help-block">@Html.ValidationMessageFor(model => model.MetaDescription)</p>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Parent Category </label>
            <div class="col-sm-8">
                @Html.HiddenFor(model => model.ParentCategoryId, new { @id = "CategoryId" })
                @Html.DropDownList("ddlcategoryId", from l in new ExcellentMarketResearch.Areas.Admin.Models.DAL.CategoryRepository().GetParent().ToList()
                                                    select new SelectListItem
                                                    {
                                                        Text = l.CategoryName,
                                                        Value = l.CategoryId.ToString()
                                                    }, " -Select Category-", new { @class = "form-control", @id = "ParentCategory", @onchange = "javascript:$('#CategoryId').val($(this).val());" })
                @Html.ValidationMessageFor(model => model.ParentCategoryId)
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Child</label>
            <div class="col-sm-8">
                @Html.HiddenFor(model => model.ParentCategoryId, new { @id = "CategoryId" })
                <select id="ChildCategory" onchange="javascript:$('#CategoryId').val($(this).val());" class="form-control">
                    <option>-Select Category-</option>
                </select>
            </div>
        </div>
    </div>
    @*<div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">Category Icon </label>
            <div class="col-sm-8">
                <input type="file" name="file" id="file" />
                <p class="help-block">@Html.ValidationMessageFor(model => model.CategoryIcon)</p>
            </div>
        </div>
    </div>*@
    <div class="form-group">
        <div class="col-sm-12">
            <label class="control-label col-sm-2" for="pwd">IsActive</label>
            <div class="col-sm-8">
                @Html.CheckBoxFor(model => model.IsActive, new { @checked = "checked" })
                <p class="help-block">@Html.ValidationMessageFor(model => model.IsActive)</p>
            </div>
        </div>
    </div>
    <p>
        <input type="submit" value="Create" />
    </p>
}

