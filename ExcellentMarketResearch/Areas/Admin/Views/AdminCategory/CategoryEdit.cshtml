@model ExcellentMarketResearch.Areas.Admin.Models.ViewModel.CategoryVM
@{
    ViewBag.Title = "Edit";
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#ParentCategory").change(function () {
            var v = $(this).val();
            debugger;
            $.ajax({
                type: "post",
                url: '@Url.Action("GetChild", "Category")',
                data: "{ 'id':" + v + "}",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    $("#ChildCategory").empty();//just cleans all html from the control, element
                    $("#ChildCategory").append('<option>-Select Category-</option>');
                    //foreach loop
                    $.each(data, function (i, ParentCategory) {
                        $("#ChildCategory").append('<option value="' + ParentCategory.Value + '">' + ParentCategory.Text + '</option>', "-Select-")
                    })

                },
                error: function (res) {
                    alert(res.responseText);
                }
            });
        });

        @* $("#ChildCategory").change(function () {
            var v = $(this).val();

            $.ajax({
                type: "post",
                url: '@Url.Action("GetChildofchild", "Report")',
                data: "{ 'id':" + v + "}",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#ChildofChild1").empty();//just cleans all html from the control, element
                    $("#ChildofChild1").append('<option>-Select Category-</option>');
                    //foreach loop
                    $.each(data, function (i, Childcategory) {
                        $("#ChildofChild1").append('<option value="' + Childcategory.Value + '">' + Childcategory.Text + '</option>', "-Select-")
                    })

                },
                error: function (res) {
                    alert(res.responseText);
                }
            })
        });*@
    });
</script>
<style>
    .field-validation-error {
        color: red;
    }
</style>





<h2>Create</h2>

@using (Html.BeginForm("CategoryEdit", "Category", FormMethod.Post,
                    new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.CategoryId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.CreatedBy)
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Category Name</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.CategoryName, new { @class = "form-control" })
            <p class="help-block" style="color: red">@Html.ValidationMessageFor(model => model.CategoryName)@ViewBag.DuplicateCategoryName</p>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Category URL</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.CategoryURL, new { @class = "form-control" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.CategoryURL)@ViewBag.DuplicateURL</p>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Meta Title </label>
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.MetaTitle, new { @class = "form-control" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.MetaTitle)</p>
        </div>
    </div>
</div>
@Html.HiddenFor(model => model.Domain)
@*
      <div class="form-group">
            <div class="col-sm-12">
                <label class="control-label col-sm-2" for="pwd"> Domain </label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.Domain, new { @class = "form-control" })
                    <p class="help-block">@Html.ValidationMessageFor(model => model.Domain)</p>
                </div>
            </div>
        </div>*@
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Keywords </label>
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.Keywords, new { @class = "form-control" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.Keywords)</p>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Short Description </label>
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.ShortDescription, new { @class = "form-control" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.ShortDescription)</p>
        </div>
    </div>
</div>
    <div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Long Description </label>
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.LongDescription, new { @class = "form-control" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.LongDescription)</p>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Meta Description </label>
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.MetaDescription, new { @class = "form-control" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.MetaDescription)</p>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Parent Category </label>
        <div class="col-sm-8">
            @Html.HiddenFor(model => model.CategoryId, new { @id = "CategoryId" })
            @Html.HiddenFor(model => model.ParentCategoryId, new { @id = "ParentCategoryId" })
            @Html.DropDownList("ddlCategory", (List<SelectListItem>)ViewBag.ParentCategories," -Select Category-", new { @class = "form-control", @id = "ParentCategory", @onchange = "javascript:$('#ParentCategoryId').val($(this).val());" })
            @Html.ValidationMessageFor(model => model.ParentCategoryId)
        </div>
    </div>
</div>
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Child</label>
        <div class="col-sm-8">
            @Html.DropDownList("ChildCategory", (List<SelectListItem>)ViewBag.ChildCategories, "-Select Category-", new {@class = "form-control", @id = "ChildCategory", @onchange = "javascript:$('#ParentCategoryId').val($(this).val());" })
            @Html.HiddenFor(model => model.ParentCategoryId, new { @id = "CategoryId" })
            @*  <select id="ChildCategory" onchange="javascript:$('#CategoryId').val($(this).val());" class="form-control">
                    <option>-Select Category-</option>
                </select>*@
        </div>

    </div>
</div>
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">Category Icon </label>
        <div class="col-sm-8">
            <input type="file" name="file" id="file" />
            <p class="help-block">@Html.ValidationMessageFor(model => model.CategoryIcon)</p>
            <img src="@(ViewBag.CategoryIcon)" height="100" width="120"  style="border:1px solid #ff6a00"/>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="col-sm-12">
        <label class="control-label col-sm-2" for="pwd">IsActive</label>
        <div class="col-sm-8">
            @Html.CheckBoxFor(model => model.IsActive)
            <p class="help-block">@Html.ValidationMessageFor(model => model.IsActive)</p>
        </div>
    </div>
</div>
<p>
    <input type="submit" value="Edit" />
</p>

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

